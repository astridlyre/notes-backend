{"version":3,"sources":["components/Button.js","components/Form.js","components/Note.js","components/Notes.js","services/notes.js","App.js","index.js"],"names":["Button","text","func","look","type","className","onClick","Form","addNote","newNote","showAll","setShowAll","handleNoteChange","handleCheckChange","toggleShowAll","value","onChange","htmlFor","id","Note","note","deleteNote","toggleImportant","important","content","date","split","Notes","notesToShow","title","map","key","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","notes","setNotes","setNewNote","isImportant","setImportant","filter","useEffect","noteService","initialNotes","catch","error","alert","message","changedNote","reply","event","preventDefault","noteObject","Date","toISOString","getTime","returnedNote","concat","console","log","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88252d30.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ text, func, look }) => (\r\n  <button type='button' className={look} onClick={func}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst Form = ({\r\n  addNote,\r\n  newNote,\r\n  showAll,\r\n  setShowAll,\r\n  handleNoteChange,\r\n  handleCheckChange,\r\n  toggleShowAll,\r\n}) => {\r\n  return (\r\n    <section>\r\n      <form>\r\n        <div className='flex-col'>\r\n          <input value={newNote} onChange={handleNoteChange} type='text' />\r\n          <label htmlFor='importantCheckBox'>\r\n            <input\r\n              type='checkbox'\r\n              id='importantCheckBox'\r\n              onChange={handleCheckChange}\r\n            />\r\n            <span className='important'>Important</span>\r\n            <span className='checkmark'></span>\r\n          </label>\r\n        </div>\r\n        <div className='mt-2'>\r\n          <Button text='Create Note' func={addNote} look='green' />\r\n          <Button\r\n            text={showAll ? \"Filter by Important\" : \"Show All\"}\r\n            func={() => setShowAll(!showAll)}\r\n            look='yellow'\r\n          />\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst Note = ({ note, deleteNote, toggleImportant }) => {\r\n  const formattedDate = () => {\r\n    return note.date.split(\"T\")[0];\r\n  };\r\n  return (\r\n    <li>\r\n      {note.important ? (\r\n        <h3 className='important'>{note.content}</h3>\r\n      ) : (\r\n        <h3>{note.content}</h3>\r\n      )}\r\n      <div className='flex-row-between'>\r\n        <span className='date'>{formattedDate()}</span>\r\n        <div>\r\n          <Button\r\n            text={note.important ? \"Not important\" : \"Important\"}\r\n            look='yellow'\r\n            func={() => toggleImportant(note)}\r\n          />\r\n          <Button text='Delete' func={() => deleteNote(note.id)} look='red' />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst Notes = ({ notesToShow, title, deleteNote, toggleImportant }) => (\r\n  <section>\r\n    <h1>{title}</h1>\r\n    <ul className='part'>\r\n      {notesToShow.map((note) => (\r\n        <Note\r\n          key={note.id}\r\n          note={note}\r\n          deleteNote={deleteNote}\r\n          toggleImportant={toggleImportant}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nexport default Notes;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"https://stark-sands-76151.herokuapp.com/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst createNote = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst updateNote = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteNote = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  createNote,\r\n  updateNote,\r\n  deleteNote,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport Notes from \"./components/Notes\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [isImportant, setImportant] = useState(false);\r\n  const [showAll, setShowAll] = useState(true);\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter((note) => note.important === true);\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then((initialNotes) => {\r\n        setNotes(initialNotes);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  }, []);\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: isImportant,\r\n      id: new Date().getTime(),\r\n    };\r\n    noteService\r\n      .createNote(noteObject)\r\n      .then((returnedNote) => setNotes([returnedNote].concat(notes)))\r\n      .catch((error) => console.log(error));\r\n    setNewNote(\"\");\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    noteService\r\n      .deleteNote(id)\r\n      .then(setNotes(notes.filter((note) => note.id !== id)))\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const toggleImportant = (changedNote) => {\r\n    noteService\r\n      .updateNote(changedNote.id, {\r\n        ...changedNote,\r\n        important: !changedNote.important,\r\n      })\r\n      .then((reply) => {\r\n        setNotes(\r\n          notes.map((note) => (note.id !== changedNote.id ? note : reply))\r\n        );\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const handleCheckChange = () => {\r\n    setImportant(!isImportant);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Notes\r\n        title='Notes'\r\n        notesToShow={notesToShow}\r\n        deleteNote={deleteNote}\r\n        toggleImportant={toggleImportant}\r\n      />\r\n      <Form\r\n        showAll={showAll}\r\n        setShowAll={setShowAll}\r\n        addNote={addNote}\r\n        newNote={newNote}\r\n        handleNoteChange={handleNoteChange}\r\n        handleCheckChange={handleCheckChange}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/index.css\";\nimport App from \"./App\";\n\n// const notes = [\n//   {\n//     id: 1,\n//     content: \"HTML is easy\",\n//     date: \"2019-05-30T17:30:31.098Z\",\n//     important: true,\n//   },\n//   {\n//     id: 2,\n//     content: \"Browser can execute only Javascript\",\n//     date: \"2019-05-30T18:39:34.091Z\",\n//     important: false,\n//   },\n//   {\n//     id: 3,\n//     content: \"GET and POST are the most important methods of HTTP protocol\",\n//     date: \"2019-05-30T19:20:14.298Z\",\n//     important: true,\n//   },\n// ];\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}